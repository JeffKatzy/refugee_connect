.modal.fade#myModal{'role' => 'dialog', 'aria-labelledby' => 'myModalLabel', 'aria-hidden' => 'true'} 
	.modal-dialog
		.modal-content
			.modal-header
				.modal-title
					= @user.name
				.modal-body
					= "Current Openings" if (@user.openings - [@opening]).present?
					- @user.openings.each do |opening|
						= opening.day_open
						= opening.time_open
					Add New Opening
					= nested_form_for @user do |f|
						= f.fields_for :openings do |form|
							= hidden_field :user_id, value: @user.id
							= form.label :day_open, "day open"
							= form.select("day_open", {"Monday" => "Monday", "Tuesday" => "Tuesday", "Wednesday" => "Wednesday", "Thursday" => "Thursday", "Friday" => "Friday"})
							= form.label :time_open, "time open"
							= form.select("time_open", {"7:30 am" => "7:30 am", "8:30 am" => "8:30 am", "9:30 am" => "9:30 am" })
							.row.padded
								.absolute.right= form.link_to_remove "Remove this availability"
							.row.padded
								= f.link_to_add "Add available time", :openings, class: 'add_time_available_button button asphalt pad-top'
						.row
							= f.submit 'Add Opening', class: 'green button large padded fixed center'
						%br
						%br
						%br
.row#background_show
	.four.centered.fifths#main
		.row.triple-pad-top
			#info
				.one.fourth.double-padded
					%h1#basic_info_user_name.pad-bottom.align-center.responsive
						= @user.location.geocoder_address_info.try(:city) + ", " + @user.location.geocoder_address_info.try(:state) if @user.location && @user.location.geocoder_address_info
					#map
						#map_canvas.rounded
				.one.fourth.double-padded
					%h1#basic_info_user_name.pad-bottom.responsive= @user.name
					#basic_info_profile_summary.box
						= "Classes completed: #{pluralize(@user.appointments.complete.count, "class")}"
						- if @user.is_tutor?
							%p= "Current students: #{pluralize(@user.appointment_partners.count, "student")}"
						- else
							%p= "Current teachers: #{pluralize(@user.appointment_partners.count, "teacher")}"
				.one.fourth.double-padded
					%h1#basic_info_user_name.pad-bottom.responsive Upcoming availabilities
					.box
						- @user.availability_manager.remaining_occurrences(Time.current + 14.days).each_with_index do |occurrence, idx|
							= occurrence.in_time_zone(@user.time_zone).strftime("%B %-d at %I:%M%p on %A")
							= link_to 'Signup', "manual_match/#{@user.id}/#{idx}" if @auth.potential_partner_with?(@user)
							%br
							- if @auth == @user
								.button.green{'data-toggle' => 'modal', 'data-target' => '#myModal'}= "Add Availabilities"
				.one.fourth.double-padded
					%h1#basic_info_user_name.pad-bottom.responsive Upcoming Apts
					.box
						- @user.appointments.after(Time.current).each do |apt|
							.row
								= apt.id
								- if @auth.is_tutor?
									= best_in_place apt, :scheduled_for_est_date_part, :type => :date
									= best_in_place apt, :scheduled_for_est_time_part, :type => :select, :collection => [["9:00 pm", "9:00 pm"], ["10:00 pm", "10:00 pm"], ["11:00 pm", "11:00 pm"]]
									= "with #{apt.tutee.name}"
								- else
									= best_in_place apt, :scheduled_for_ist_date_part, :type => :date
									= best_in_place apt, :scheduled_for_ist_time_part, :type => :select, :collection => [["7:30 am", "7:30 am"], ["8:30 am", "8:30 am"], ["9:30 am", "9:30 am"]]
									= "with #{apt.tutor.name}" 
								Click to edit
			.main_section
				- if @user.role == 'tutee'
					- @user.photos.tweet_created_at_asc.each do |photo|
						%row.padded.center
							= image_tag photo.url
				- elsif @user.role == 'tutor'
			- if @user.location && @user.location.latitude && @user.location.longitude
				%script
					= "display_map(#{@user.location.latitude}, #{@user.location.longitude});"	

